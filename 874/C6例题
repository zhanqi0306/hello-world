/*6-1用while循环求1-100的累加和
#include <stdio.h>
int main(){
	int i=1,sum=0;
	while (i <= 100)
	{
		sum += i;
		i++;
	}
	printf("sum=%d\n",sum);

	return 0;
}*/

/*6-2利用欧几里得算法来求两个正整数的最大公因子
#include<stdio.h>
int main(){
	int m,n,r;
	scanf("%d%d",&m,&n);
	r = m % n;
	while (r != 0)
	{
		m = n;
		n = r;
		r = m % n;
	}
	printf("%d",n);
	return 0;
}*/

/*6-3使用do-while循环来计算1-100的累加和
#include<stdio.h>
int main(){
	int i=1,sum=0;
	do
	{
		sum += i;
		i++;
	} while (i<=100);
	printf("%d",sum);

	return 0;
}*/

/*6-4 用for语句计算1-100的累加和
#include<stdio.h>
int main(){
	int sum = 0;
	for (int i = 1; i <= 100; i++)
	{
		sum += i;
	}
	printf("%d\n",sum);
	return 0;
}
*/
/*6-5嵌套循环的执行过程
#include<stdio.h>
int main(){
	int i,j;
	for ( i = 1; i <= 3; i++)
	{
		printf("i=%d: ",i);
		for ( j = 1;j <= 4;j++)
			printf("j=%-4d",j);
		printf("\n");
	}

	return 0;
}*/

/*6-6将用户输入的小写字母转换成大写字母，知道输入非小写字母字符
#include <stdio.h>
int main(){
	char c;
	while (1)
	{
		c = getchar();
		if (c >= 'a' && c <= 'z')
			putchar(c - 32);
		else 
			break;
	}
	
	return 0;
}*/

/*6-7求输入的10个整数中正数的个数及其平均值
#include <stdio.h>
int main(){
	int i,a,num=0; //num代表正数的个数增加
	float sum=0;
	for ( i = 0; i < 10; i++)
	{
		scanf("%d",&a);
		if (a <= 0)continue;
		num++;
		sum += a;
	}
	printf("%d puls integer's sum %.0f\n",num,sum);
	printf("average value:%.2f\n",sum / num);

	return 0;
}
*/

/*6-8输入三角形边长求三角形面积
#include<stdio.h>
#include<stdlib.h>
#include<math.h>

int main(){
	float a,b,c;
	float s,area;
	printf("input the length of three edges of triangle:");
	scanf("%f%f%f",&a,&b,&c);
	if (a<=0 || b<=0 || c <= 0)
	{
		printf("the length of three edges of triangle is error!\n");
		exit(-1);
	}
	s = (a + b + c) / 2;
	s = s*(s-a)*(s-b)*(s-c);
	if (s < 0)
	{
		printf("the length of three edges of triangle is error!\n");
		exit(-1);
	}

	area = (float)sqrt(s);
	printf("area = %.2f\n",area);

	return 0;
}
*/

/*判断某正整数是否是素数
#include<stdio.h>
#include<math.h>
int main(){
	int m,i,k;
	scanf("%d",&m);

	k = sqrt(m);
	for (i = 2; i <= k; i++) //这里是用 用2-k这些数依次去除这个m
	{
		if (m % i == 0) //如果有能除尽的 说明这个数有除了1和它本身的因数 不是一个素数 直接跳出
			break;
	}
	if (i > k) //如果m是素数的话 i最后的值一定是比m大1 如果不是这样的话 说明不是素数
		printf("yes\n");
	else 
		printf("no\n");	
	
	return 0;
}
*/
