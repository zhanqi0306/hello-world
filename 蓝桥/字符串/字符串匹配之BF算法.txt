伪代码
1. 首先设定 S 和 T 的起始比较下标 i 和 j；
2. 循环直到 i+m>n 或者T中的字符都比较完(j==m)
	2.1 如果S[i]==T[j], 继续比较S和T的下一个字符，否则
	2.2 将 i 和 j 回溯，准备下一轮比较
3. 如果T中的字符都比较完(j==m)，则返回比较的起始下标
    否则返回-1，表示匹配失败

#include<iostream>
#include<string.h>
using namespace std;

int strStr(const char *S, const char *T){
    if(S==NULL||T==NULL) return -1;
    int n = strlen(S);
    int m = strlen(T);
    int i=0;
    while( i+m<=n){
        int k=i, j=0;
        for(; j<m&&k<n&&S[k]==T[j]; ++k,++j) ;
        if(j==m) return i;  //  匹配成功，返回比较开始位置
        ++i;
    }
    return -1;   // 匹配失败
}

int main(int argc, char const *argv[])
{
    char * S = "ababcabcacbab";
    char * T = "abcac";
    strStr(S,T);
    return 0;
}
