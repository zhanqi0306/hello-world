/*
标题: 振兴中华
    小明参加了学校的趣味运动会，其中的一个项目是：跳格子。
    地上画着一些格子，每个格子里写一个字，如下所示：（也可参见p1.jpg）

从我做起振
我做起振兴
做起振兴中
起振兴中华

    比赛时，先站在左上角的写着“从”字的格子里，可以横向或纵向跳到相邻的格子里，但不能跳到对角的格子或其它位置。一直要跳到“华”字结束。
    要求跳过的路线刚好构成“从我做起振兴中华”这句话。
    请你帮助小明算一算他一共有多少种可能的跳跃路线呢？

答案是一个整数，请通过浏览器直接提交该数字。
注意：不要提交解答过程，或其它辅助说明类的内容。
*/

/*
思路就是递归
从 0，0 这个位置到 4，3 这个位置
*/

#include<iostream>
using namespace std;

int f(int x,int y){
    if(x == 4 && y == 3)
        return 1;
    if(x == 4){
        return f(x,y+1);
    }
    if(y == 3){
        return f(x+1,y);
    }
    return f(x+1,y) + f(x,y+1);
}

int main(int argc, char const *argv[])
{
    int result = f(0,0);
    cout << result << endl;
    return 0;
}

/*
另外一种思路是利用动态规划
使用一个二维数组来记录从当前位置走到右下角的路线的条数
然后考虑递推公式
*/
