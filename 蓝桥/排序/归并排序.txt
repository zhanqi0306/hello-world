#include<stdio.h>

void merge_sort_recursive(int arr[], int result[], int start, int end) {
    //递归条件
    if(start >= end)
        return;
    int mid = start + ((end-start)>>1);
    int start1 = start,end1 = mid;
    int start2 = mid+1,end2 = end;
    merge_sort_recursive(arr, result, start1, end1);
    merge_sort_recursive(arr, result, start2, end2);
    int index = start;
    while (start1 <= end1 && start2 <= end2)
        result[index++] = arr[start1]<arr[start2] ? arr[start1++] : arr[start2++];
    while (start1 <= end1)
        result[index++] = arr[start1++];
    while (start2 <= end2)
        result[index++] = arr[start2++];

    for (int i = start; i <= end; i++)
        arr[i] = result[i];
}
    
void merge_sort(int arr[],int len) {
    int result[7] = {0};
    merge_sort_recursive(arr,result,0,len-1);
}

int main(int argc, char const *argv[])
{
    int arr[] = {3,7,5,4,1,6,8};
    merge_sort(arr,7);
    for (int i = 0; i < 7; i++)
        printf("%d\t",arr[i]);
    return 0;
}